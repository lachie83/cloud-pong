// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package pong

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PongData struct {
	Bat                  *Bat     `protobuf:"bytes,1,opt,name=bat,proto3" json:"bat,omitempty"`
	Ball                 *Ball    `protobuf:"bytes,2,opt,name=ball,proto3" json:"ball,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PongData) Reset()         { *m = PongData{} }
func (m *PongData) String() string { return proto.CompactTextString(m) }
func (*PongData) ProtoMessage()    {}
func (*PongData) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *PongData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PongData.Unmarshal(m, b)
}
func (m *PongData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PongData.Marshal(b, m, deterministic)
}
func (m *PongData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PongData.Merge(m, src)
}
func (m *PongData) XXX_Size() int {
	return xxx_messageInfo_PongData.Size(m)
}
func (m *PongData) XXX_DiscardUnknown() {
	xxx_messageInfo_PongData.DiscardUnknown(m)
}

var xxx_messageInfo_PongData proto.InternalMessageInfo

func (m *PongData) GetBat() *Bat {
	if m != nil {
		return m.Bat
	}
	return nil
}

func (m *PongData) GetBall() *Ball {
	if m != nil {
		return m.Ball
	}
	return nil
}

type Bat struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bat) Reset()         { *m = Bat{} }
func (m *Bat) String() string { return proto.CompactTextString(m) }
func (*Bat) ProtoMessage()    {}
func (*Bat) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *Bat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bat.Unmarshal(m, b)
}
func (m *Bat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bat.Marshal(b, m, deterministic)
}
func (m *Bat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bat.Merge(m, src)
}
func (m *Bat) XXX_Size() int {
	return xxx_messageInfo_Bat.Size(m)
}
func (m *Bat) XXX_DiscardUnknown() {
	xxx_messageInfo_Bat.DiscardUnknown(m)
}

var xxx_messageInfo_Bat proto.InternalMessageInfo

func (m *Bat) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Bat) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Ball struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ball) Reset()         { *m = Ball{} }
func (m *Ball) String() string { return proto.CompactTextString(m) }
func (*Ball) ProtoMessage()    {}
func (*Ball) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *Ball) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ball.Unmarshal(m, b)
}
func (m *Ball) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ball.Marshal(b, m, deterministic)
}
func (m *Ball) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ball.Merge(m, src)
}
func (m *Ball) XXX_Size() int {
	return xxx_messageInfo_Ball.Size(m)
}
func (m *Ball) XXX_DiscardUnknown() {
	xxx_messageInfo_Ball.DiscardUnknown(m)
}

var xxx_messageInfo_Ball proto.InternalMessageInfo

func (m *Ball) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Ball) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func init() {
	proto.RegisterType((*PongData)(nil), "pong.PongData")
	proto.RegisterType((*Bat)(nil), "pong.Bat")
	proto.RegisterType((*Ball)(nil), "pong.Ball")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0xc8, 0xcf, 0x4b, 0x57, 0x72, 0xe7, 0xe2, 0x08,
	0xc8, 0xcf, 0x4b, 0x77, 0x49, 0x2c, 0x49, 0x14, 0x92, 0xe6, 0x62, 0x4e, 0x4a, 0x2c, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x36, 0xe2, 0xd4, 0x03, 0xc9, 0xeb, 0x39, 0x25, 0x96, 0x04, 0x81, 0x44,
	0x85, 0xe4, 0xb8, 0x58, 0x92, 0x12, 0x73, 0x72, 0x24, 0x98, 0xc0, 0xb2, 0x5c, 0x30, 0xd9, 0x9c,
	0x9c, 0x20, 0xb0, 0xb8, 0x92, 0x22, 0x17, 0xb3, 0x53, 0x62, 0x89, 0x10, 0x0f, 0x17, 0x63, 0x05,
	0xd8, 0x04, 0xd6, 0x20, 0xc6, 0x0a, 0x10, 0xaf, 0x12, 0xac, 0x83, 0x35, 0x88, 0xb1, 0x52, 0x49,
	0x89, 0x8b, 0x05, 0xa4, 0x01, 0x9f, 0x1a, 0x23, 0x5b, 0x2e, 0x6e, 0x90, 0x7b, 0x82, 0x53, 0x8b,
	0xca, 0x32, 0x93, 0x53, 0x85, 0xf4, 0xb8, 0xd8, 0x82, 0x4b, 0x8a, 0x52, 0x13, 0x73, 0x85, 0xf8,
	0x20, 0x36, 0xc2, 0x1c, 0x2b, 0x85, 0xc6, 0x57, 0x62, 0xd0, 0x60, 0x34, 0x60, 0x4c, 0x62, 0x03,
	0xfb, 0xcd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x2f, 0xba, 0xab, 0xe8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PongServiceClient is the client API for PongService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PongServiceClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (PongService_StreamClient, error)
}

type pongServiceClient struct {
	cc *grpc.ClientConn
}

func NewPongServiceClient(cc *grpc.ClientConn) PongServiceClient {
	return &pongServiceClient{cc}
}

func (c *pongServiceClient) Stream(ctx context.Context, opts ...grpc.CallOption) (PongService_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PongService_serviceDesc.Streams[0], "/pong.PongService/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &pongServiceStreamClient{stream}
	return x, nil
}

type PongService_StreamClient interface {
	Send(*PongData) error
	Recv() (*PongData, error)
	grpc.ClientStream
}

type pongServiceStreamClient struct {
	grpc.ClientStream
}

func (x *pongServiceStreamClient) Send(m *PongData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pongServiceStreamClient) Recv() (*PongData, error) {
	m := new(PongData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PongServiceServer is the server API for PongService service.
type PongServiceServer interface {
	Stream(PongService_StreamServer) error
}

// UnimplementedPongServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPongServiceServer struct {
}

func (*UnimplementedPongServiceServer) Stream(srv PongService_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}

func RegisterPongServiceServer(s *grpc.Server, srv PongServiceServer) {
	s.RegisterService(&_PongService_serviceDesc, srv)
}

func _PongService_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PongServiceServer).Stream(&pongServiceStreamServer{stream})
}

type PongService_StreamServer interface {
	Send(*PongData) error
	Recv() (*PongData, error)
	grpc.ServerStream
}

type pongServiceStreamServer struct {
	grpc.ServerStream
}

func (x *pongServiceStreamServer) Send(m *PongData) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pongServiceStreamServer) Recv() (*PongData, error) {
	m := new(PongData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PongService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pong.PongService",
	HandlerType: (*PongServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _PongService_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api.proto",
}
